/****************************************************
 *
 * *****  *   *    *  *   *   ****    ****    ****
 *   *    *   * *  *    *     *  *    *  *    *    
 *   *    *   *    *    *     *   *   *       ****
 *
 * ${FILE_NAME}
 * ${CREATE_TIME}
 * Generated by tinyrpc framework tinyrpc_generator.py
 * Do not edit !!!
****************************************************/

#include <google/protobuf/service.h>
#include <memory>
#include "tinyrpc/common/log.h"
#include "tinyrpc/common/config.h"
#include "tinyrpc/net/tcp/net_addr.h"
#include "tinyrpc/net/tcp/tcp_server.h"
#include "tinyrpc/net/rpc/rpc_dispatcher.h"

${INCLUDE_SERVER_HEADER}

int main(int argc, char* argv[]) {
    if(argc != 2) {
      printf("Start ${PROJECT_NAME} error, argc not 2 ! \n");
      printf("Start like this: \n");
      printf("./${PROJECT_NAME} ../conf/tinyrpc.xml \n");
      return 0;
    }

    MyTinyRPC::Config::SetGlobalConfig(argv[1]);
    MyTinyRPC::Logger::InitGlobalLogger();
    MyTinyRPC::RpcDisPatcher::GetRpcDispatcher()->registerService(std::make_shared<${CLASS_NAME}>());

    MyTinyRPC::IPNetAddr::s_ptr local_addr = std::make_shared<MyTinyRPC::IPNetAddr>("127.0.0.1", MyTinyRPC::Config::GetGloabalConfig()->m_port);
    MyTinyRPC::TcpServer tcp_server(local_addr);
    
    tcp_server.start();
    
    return 0;
}